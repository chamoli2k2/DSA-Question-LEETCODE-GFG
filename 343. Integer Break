class Solution {
private: 
    int solve(vector<int> &nums,vector<int> &dp,int idx,int target){
        if(target == 0){
            return 1;
        }
        
        if(idx >= nums.size()){
            return -1;
        }

        if(dp[target] != -1){
            return dp[target];
        }

        int ans = INT_MIN;
        for(int i=idx;i<nums.size();i++){
            int k = 1;
            if(nums[i] <= target){
                k = k * nums[i] * solve(nums,dp,0,target-nums[i]);
            }
            ans = max(ans,k);
        }

        return dp[target] = ans;
    }
public:
    int integerBreak(int n) {
        if(n <= 2) return n-1;
        
        vector<int> nums(n-1);
        for(int i=0;i<n-1;i++){
            nums[i] = i+1;
        }

        vector<int> dp(n+1,-1);
        return solve(nums,dp,0,n);
    }
};
