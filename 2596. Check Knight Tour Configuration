class Solution {
private:
    bool check(unordered_map<int,pair<int,int>> &mp,vector<vector<int>> grid,int idx){
        int i = mp[idx].first;
        int j = mp[idx].second;
        
        int a = mp[idx-1].first;
        int b = mp[idx-1].second;

        if((a-1 == i && b+2 == j) || (a-1 == i && b-2 == j) || (a+1 == i && b+2 == j) || (a+1 == i && b-2 == j) || (a-2 == i && b-1 == j) || (a-2 == i && b+1 == j) || (a+2 == i && b-1 == j) || (a+2 == i && b+1 == j)){
            return true;
        }
        
        return false;
    }
public:
    bool checkValidGrid(vector<vector<int>>& grid) {
        int n = grid.size();
        if(grid[0][0]) return false;     
        vector<vector<int>> visited(n,vector<int>(n,0));
        unordered_map<int,pair<int,int>> mp;
        
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                mp[grid[i][j]] = {i,j};
            }
        }
        
        for(int i=1;i<n*n;i++){
            int num = i;
            if(check(mp,grid,num)){
                continue;
            }
            else{
                cout<<i<<endl;
                return false;
            }
        }
        
        return true;
    }
};
