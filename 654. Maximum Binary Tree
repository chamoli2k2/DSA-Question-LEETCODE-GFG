/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    TreeNode* solve(vector<int> &nums,int s,int e){
        // Base case
        if(s > e) return NULL;

        TreeNode* newNode = new TreeNode();
        int idx, maxi = INT_MIN;
        for(int i=s;i<=e;i++){
            if(nums[i] > maxi){
                idx = i;
                maxi = nums[i];
            }
        }

        newNode->val = maxi;
        newNode->left = solve(nums,s,idx-1);
        newNode->right = solve(nums,idx+1,e);
        return newNode;
    }
public:
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return solve(nums,0,nums.size()-1);
    }
};
