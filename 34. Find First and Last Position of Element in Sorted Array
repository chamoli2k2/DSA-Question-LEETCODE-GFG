class Solution {
private:
    int lb(vector<int> &nums,int target){
        int s = 0;
        int e = nums.size() - 1;
        int ans = -1;
        while(s <= e){
            int mid = s + (e - s) / 2;

            if(nums[mid] == target){
                ans = mid;
                e = mid - 1;
            }
            else if(nums[mid] > target){
                e = mid - 1;
            }
            else{
                s = mid + 1;
            }
        }
        return ans;
    }

    int ub(vector<int> &nums,int target){
        int s = 0;
        int e = nums.size() - 1;
        int ans = -1;
        while(s <= e){
            int mid = s + (e - s) / 2;

            if(nums[mid] == target){
                ans = mid;
                s = mid + 1;
            }
            else if(nums[mid] > target){
                e = mid - 1;
            }
            else{
                s = mid + 1;
            }
        }
        return ans;
    }
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        int i = lb(nums,target);
        int j = ub(nums,target);
        ans.push_back(i); 
        ans.push_back(j); 

        return ans;
    }
};
