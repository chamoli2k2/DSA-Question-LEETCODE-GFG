class Solution {
public:
    string countAndSay(int n) {
        // Base case
        if(n == 1) return "1";

        // By recursion
        string currentAns = countAndSay(n-1);

        // Evaluating final Answer
        string ans = "";
        stack<char> st;
        int m = currentAns.size();
        for(int i=m-1; i>=0; i--){
            st.push(currentAns[i]);
        }

        int count = 1;
        char newChar = st.top();
        st.pop();

        while(!st.empty()){
            if(newChar == st.top()){
                count++;
            }
            else{
                ans += ('0'+count);
                ans += newChar;
                newChar = st.top();
                count = 1;
            }
            st.pop();
        }

        if(count >= 1){
            ans += (count + '0');
            ans += newChar;
        }

        return ans;
    }
};
