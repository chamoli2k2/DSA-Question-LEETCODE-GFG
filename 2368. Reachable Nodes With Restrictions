class Solution {
public:
    int reachableNodes(int n, vector<vector<int>>& edges, vector<int>& restricted) {
        int ans = 0;
        unordered_map<int,list<int>> mp;
        for(auto it : edges){
            mp[it[0]].push_back(it[1]);
            mp[it[1]].push_back(it[0]);
        }

        vector<int> visited(n,0);
        for(int i=0;i<size(restricted);i++){
            visited[restricted[i]] = -1;
        }

        queue<int> q;
        q.push(0);
        visited[0] = 1;

        while(!q.empty()){
            int node = q.front();
            q.pop();
            ans++;

            for(auto it : mp[node]){
                if(visited[it] == 0){
                    q.push(it);
                    visited[it] = 1;
                }
            }
        }

        return ans;
    }
};
