/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void solve(TreeNode* &root,int val,int idx,int depth){
        // base case
        if(root == NULL){
            return;
        }

        if(idx + 1 == depth){
            TreeNode* temp1 = root->left;
            TreeNode* temp2 = root->right;

            root->left = new TreeNode(val);
            root->right = new TreeNode(val);

            root->left->left = temp1;
            root->right->right = temp2;
            return;
        }

        solve(root->left,val,idx+1,depth);
        solve(root->right,val,idx+1,depth);
    }
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth == 1){
            TreeNode* newTree = new TreeNode(val);
            newTree->left = root;
            return newTree;
        }
        solve(root,val,1,depth);
        return root;
    }
};
