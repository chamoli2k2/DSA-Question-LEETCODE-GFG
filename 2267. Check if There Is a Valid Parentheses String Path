class Solution {
private:
    bool solve(vector<vector<char>> &grid,vector<vector<vector<int>>> &dp,int i,int j,int target){
        // base case
        if(i >= grid.size() || i < 0 || j >= grid[0].size() || j < 0 || target < 0){
            return false;
        }

        if(i == grid.size()-1 && j == grid[0].size()-1){
            return target - 1 == 0 ? true : false;
        }

        if(dp[i][j][target] != -1){
            return dp[i][j][target];
        }

        bool ds, rs;
        if(grid[i][j] == '('){
            ds = solve(grid,dp,i+1,j,target+1);
            rs = solve(grid,dp,i,j+1,target+1);
        }
        else{
            ds = solve(grid,dp,i+1,j,target-1);
            rs = solve(grid,dp,i,j+1,target-1);
        }

        return dp[i][j][target] = ds | rs;
    }
public:
    bool hasValidPath(vector<vector<char>>& grid) {
        int n = grid.size();
        int m = grid[0].size();

        // Base case
        if(grid[0][0] == ')' || grid[n-1][m-1] == '('){
            return false;
        }

        vector<vector<vector<int>>> dp(n,vector<vector<int>>(m,vector<int>(m+n,-1)));
        return solve(grid,dp,0,0,0);
    }
};
