class Solution {
public:
    bool wordPattern(string pattern, string s) {
        unordered_map<char,string> mp1;
        unordered_map<string,char> mp2;
        int idx = 0;
        for(int i=0;i<pattern.size();i++){
            string temp = "";

            if(idx >= s.size()) return false;
            while(idx < s.size() && s[idx] != ' '){
                temp += s[idx++];
            }
            
            if(mp1.find(pattern[i]) == mp1.end() && mp2.find(temp) == mp2.end()){
                mp1[pattern[i]] = temp;
                mp2[temp] = pattern[i];
            }
            else if(mp1[pattern[i]] != temp && mp2[temp] != pattern[i]){
                return false;
            }

            idx++;
        }

        if(idx < s.size()) return false;

        return true;
    }
}; 
