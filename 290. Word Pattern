class Solution {
public:
    bool wordPattern(string pattern, string s) {
        unordered_map<char,string> mp;
        unordered_map<string,char> kp;

        int n = pattern.size();
        vector<string> words;       
        string temp = "";

        for(int i=0;i<s.size();i++){
            if(s[i] == ' '){
                words.push_back(temp);
                temp = "";
            }
            else{
                temp += s[i];
            }

            if(i == s.size()-1){
                words.push_back(temp);
            }
        }

        int k = words.size();
        // Base case
        if(n != k) return false;

        for(int i=0;i<n;i++){
            if(mp.find(pattern[i]) == mp.end() && kp.find(words[i]) == kp.end()){
                mp[pattern[i]] = words[i];
                kp[words[i]] = pattern[i];
            }
            else{
                if(mp[pattern[i]] != words[i] || kp[words[i]] != pattern[i]){
                    return false;
                }
            }
        }

        return true;
    }
};
