class Solution {
private:
    void inorder(TreeNode* root,vector<int> &ans){
        // base case
        if(root == NULL){
            return;
        }
        
        inorder(root->left,ans);
        ans.push_back(root->val);
        inorder(root->right,ans);
    }
    
    TreeNode* helper(TreeNode* root,int num){
        // base case
        if(root == NULL){
            root = new TreeNode(num);
            return root;
        }
        
        if(root->val < num){
            root->right = helper(root->right,num);
        }
        else{
            root->left = helper(root->left,num);
        }
        
        return root;
    }
public:
    TreeNode* increasingBST(TreeNode* root) {
        vector<int> ans;
        inorder(root,ans);
        
        TreeNode* node = NULL;
        for(int i=0;i<ans.size();i++){
            int num = ans[i];
            node = helper(node,num);
        }
        
        return node;
    }
};
