class Solution {
private:
    int solve(vector<int> &nums,vector<vector<int>> &dp,int idx,int time){
        // Base case
        if(idx >= nums.size()){
            return 0;
        }

        if(dp[idx][time] != -1) return dp[idx][time];

        int take = time * nums[idx] + solve(nums,dp,idx+1,time+1);
        int notake = solve(nums,dp,idx+1,time);

        return dp[idx][time] = max(take,notake);
    }
public:
    int maxSatisfaction(vector<int>& satisfaction) {
        int n = satisfaction.size();
        sort(satisfaction.begin(),satisfaction.end());
        vector<vector<int>> dp(n,vector<int>(n+1,-1));
        return solve(satisfaction,dp,0,1);
    }
};
