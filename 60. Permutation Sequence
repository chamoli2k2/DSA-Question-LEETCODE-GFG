class Solution {
    void nxt_permutation(string &num){
        int n = num.size() - 2;
        
        // Finding first number greater number 
        while(num[n] > num[n+1]){
            n--;
        }
        
        int temp = num[n];
        int i = num.size() - 1;
        
        // finding the first number greater than that number from back
        while(temp > num[i]){
            i--;
        }
        
        // swapping both number 
        swap(num[n],num[i]);
        
        
        // reversing the number 
        reverse(num.begin()+n+1,num.end());
    }
public:
    string getPermutation(int n, int k) {
        string num = "";
        // Step 1 : making number first;
        for(int i=1;i<=n;i++){
            num += to_string(i);
        }
        
        // step 2 : Finding next permutation
        while(k > 1){
            nxt_permutation(num);
            k--;
        }
        
        return num;
    }
};
