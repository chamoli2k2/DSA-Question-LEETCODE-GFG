class Solution {
private:
    int solve(string &s,vector<vector<int>> &dp,int i,int j){
        // Base case
        if(i > j){
            return 0;
        }
        else if(i == j) return 1;

        if(dp[i][j] != -1) return dp[i][j];

        if(s[i] == s[j]){
            return dp[i][j] = 2 + solve(s,dp,i+1,j-1);
        }
        
        int c1 = solve(s,dp,i+1,j);
        int c2 = solve(s,dp,i,j-1);

        return dp[i][j] = max(c1,c2);
    }
public:
    int longestPalindromeSubseq(string s) {
        int n = s.size();
        vector<vector<int>> dp(n,vector<int>(n,-1));
        return solve(s,dp,0,n-1);
    }
};
