class Solution {
public:
    long long maximumOr(vector<int>& nums, int k) {
        long long ans = 0;
        sort(begin(nums),end(nums));
        int n = nums.size();
        vector<int> pre1(n), pre2(n);
        pre1[0] = nums[0];
        pre2[n-1] = nums[n-1];
        for(int i=1;i<n;i++){
            pre1[i] = nums[i] | pre1[i-1]; 
        }
        
        for(int i=n-2;i>=0;i--){
            pre2[i] = nums[i] | pre2[i+1];
        }
        
        for(int i=0;i<n;i++){
            long long t = nums[i] * pow(2,k);
            if(i+1 < n) t = t | pre2[i+1];
            if(i-1 >= 0) t = t | pre1[i-1];
            
            ans = max(ans,t);
        }
        
        return ans;
    }
};
