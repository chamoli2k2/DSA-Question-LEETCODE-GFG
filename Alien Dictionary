class Solution{
    public:
    string findOrder(string dict[], int N, int K) {
        unordered_map<int,list<int>> adj;
        vector<int> indegree(K,0);
        for(int i=0;i<N-1;i++){
            string s1 = dict[i];
            string s2 = dict[i+1];
            
            for(int j=0;j<s1.size();j++){
                if(s1[j] != s2[j]){
                    adj[s1[j]-'a'].push_back(s2[j]-'a');
                    indegree[s2[j]-'a']++;
                    break;
                }
            }
        }
        
        queue<int> q;
        for(int i=0;i<K;i++){
	        if(indegree[i] == 0){
	            q.push(i);
	        }
	    }
	    
	    string ans = "";
	    
	    while(!q.empty()){
	        int node = q.front();
	        q.pop();
	        ans += ('a' + node);
	        
	        for(auto it : adj[node]){
	            indegree[it]--;
	            if(indegree[it] == 0){
	                q.push(it);
	            }
	        }
	    }
	    
	    return ans;
    }
};
