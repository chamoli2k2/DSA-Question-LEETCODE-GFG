class Solution{
    public:
    /*You are required to complete this method */
    int findMaxDiff(int arr[], int n)
    {
       vector<int> ls;
       vector<int> rs;
       stack<int> st;
       
       // Minimum smallest left
       for(int i=0;i<n;i++){
           int num=arr[i];
           
           while(!st.empty() and st.top()>=num) st.pop();
           
           if(st.empty()){
               ls.push_back(0);
           }else{
               ls.push_back(st.top());
           }
           
           st.push(num);
       }
       // reversing arr
       reverse(arr,arr+n);
       
       // Emptying stack
       while(!st.empty()){
           st.pop();
       }
       
       // Minimum smallest right
       for(int i=0;i<n;i++){
           int num=arr[i];
           
           while(!st.empty() and st.top()>=num) st.pop();
           
           if(st.empty()){
               rs.push_back(0);
           }else{
               rs.push_back(st.top());
           }
           
           st.push(num);
       }
       
       // reversting rs
       reverse(rs.begin(),rs.end());
       
       // Evaluating the answer
       int diff=INT_MIN;
       for(int i=0;i<n;i++){
           int num=abs(ls[i]-rs[i]);
           
           diff=max(diff,num);
       }
       
       return diff;
    }
};
