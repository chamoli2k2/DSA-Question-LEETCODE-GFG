class Solution
{
  public:
    vector<int> findOrder(int V, int m, vector<vector<int>> pre) 
    {
        unordered_map<int,list<int>> adj;
        vector<int> indegree(V,0);
        int count = 0;

        for(auto it : pre){
            adj[it[1]].push_back(it[0]);
            indegree[it[0]]++;
        }

        queue<int> q;
        for(int i=0;i<V;i++){
            if(indegree[i] == 0){
                q.push(i);
            }
        }

        vector<int> ans;
        while(!q.empty()){
            int node = q.front();
            q.pop();
            ans.push_back(node);
            count++;

            for(auto it : adj[node]){
                indegree[it]--;
                if(indegree[it] == 0){
                    q.push(it);
                }
            }
        }

        if(count == V){
            return ans;
        }

        return {};
    }
};
