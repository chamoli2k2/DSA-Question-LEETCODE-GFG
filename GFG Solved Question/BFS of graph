class Solution {
  public:
    // Function to return Breadth First Traversal of given graph.
    vector<int> bfsOfGraph(int n, vector<int> adj[]) {
        vector<int> ans;
        int visited[n] = {0};
        queue<int> q;
        q.push(0);
        
        while(!q.empty()){
            
            // step 1 : if element in front of queue is not visited
            int front = q.front();
        
                q.pop();
                visited[front] = 1;
                ans.push_back(front);
                
                // step 2 : than pushing neighbour element of front element into list 
                for(auto i : adj[front]){
                    
                    // step 3 : checking if neighboor is already visited or not
                    if(visited[i] == 0){
                        
                        // step 4 : if not visited than pushing it queue
                        q.push(i);
                        visited[i] = 1;
                    }
                }
        }
        
        return ans;
    }
};
