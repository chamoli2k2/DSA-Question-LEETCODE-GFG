class Solution{
private:
    static bool comparator(vector<int> &p1,vector<int> &p2){
        // case 1 : if p1 end < p2 end;
        if(p1[0] < p2[0]){
            return true;
        }
        else if(p1[0] > p2[0]){
            return false;
        }
        
        if(p1[2] < p2[2]){
            return true;
        }
        
        return false;
    }
public:
    vector<int> maxMeetings(int n,vector<int> &start,vector<int> &end){
        vector<vector<int>> pr(n,vector<int>(3,-1));
         for(int i=0;i<n;i++){
             pr[i][0] = end[i];
             pr[i][1] = start[i];
             pr[i][2] = i;
         }
         
         sort(pr.begin(),pr.end(),comparator);
         
         int limit = pr[0][0];
         vector<int> ans;
         ans.push_back(pr[0][2] + 1);
         for(int i=1;i<n;i++){
             if(pr[i][1] > limit){
                 ans.push_back(pr[i][2] + 1);
                 limit = pr[i][0];
             }
         }
         
         // sorting the array 
         sort(ans.begin(),ans.end());
         
         return ans;
    }
};
