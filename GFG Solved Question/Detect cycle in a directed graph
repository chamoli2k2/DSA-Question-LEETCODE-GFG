class Solution {
  private:
  bool check(vector<int> adj[],bool visited[],bool dfsVisited[],int node){
        
        // marking the ith index true
        visited[node] = true;
        dfsVisited[node] = true;
        
        for(auto it : adj[node]){
            if(visited[it] == false){
                if(check(adj,visited,dfsVisited,it)){
                    return true;
                }
            }else if(dfsVisited[it]){
                return true;
            }
        }
        
        dfsVisited[node] = false;
        
        return false;
    } 
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int n, vector<int> adj[]) {
        // making the visited array
        bool visited[n] = {false};
        bool dfsVisited[n] = {false};
        
        for(int i=0;i<n;i++){
            if(visited[i] == false){
                if(check(adj,visited,dfsVisited,i)){
                    return true;
                }
            }
        }
        
        return false;
    }
};
