int minSumPath(vector<vector<int>> &grid) {
    int n = grid.size();
    int m = grid[0].size();
    vector<vector<int>> dp(n,vector<int>(m,-1));
    
    if(n == 1 and m == 1){
        return grid[0][0];
    }
    
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            if(i == 0 and j == 0){
                dp[0][0] = grid[0][0];
            }else{
                int up = grid[i][j];
                if(i > 0){
                    up = up + dp[i-1][j];
                }else{
                    up += 1e9;
                }
                
                int ls = grid[i][j];
                if(j > 0){
                    ls += dp[i][j-1];
                }else{
                    ls += 1e9;
                }
                
                dp[i][j] = min(ls,up);
            }
        }
    }
    return dp[n-1][m-1];
}
