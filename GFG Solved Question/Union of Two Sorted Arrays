class Solution{
    public:
    //arr1,arr2 : the arrays
    // n, m: size of arrays
    //Function to return a list containing the union of the two arrays. 
    vector<int> findUnion(int arr1[], int arr2[], int n, int m)
    {
        // Creating Union vector to store answer
        vector<int> Union;
        set<int> set;
        // trying two pointers approach 
        int i = 0, j = 0;
        int num ;
        
        while(i < n and j < m){
            if(arr1[i] < arr2[j]){
                num = arr1[i];
                set.insert(num);
                i++;
            }else if(arr1[i] > arr2[j]){
                num = arr2[j];
                set.insert(num);
                j++;
            }else{
                
                num = arr1[i];
                set.insert(num);
                i++;
                j++;
            }
        }
        
        while(i < n){
            num = arr1[i];
            set.insert(num);
            i++;
        }
        
        while(j < m){
            num = arr2[j];
            set.insert(num);
            j++;
        }
        
        for(auto it=set.begin();it!=set.end();it++){
            int num = *it;
            Union.push_back(num);
        }
        return Union;
    }
};
