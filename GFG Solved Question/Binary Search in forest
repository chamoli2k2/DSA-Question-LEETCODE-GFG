class Solution{
    private:
    int check(int tree[],int mid,int n){
        int count = 0;
        for(int i=0;i<n;i++){
            if(tree[i] >= mid){
                count += (tree[i] - mid);
            }
        }
        
        return count;
    }
    public:
    int find_height(int tree[], int n, int k)
    {
        // Finding maximum height of tree
        sort(tree,tree+n);
        
        int e = tree[n-1];
        int s = 0;
        
        // doing binary search
        int ans = -1;
        int mid;
        
        while(s <= e){
            mid = s + (e - s) / 2;
            int h = check(tree,mid,n);
            if(h == k){
                ans = mid;
                break;
            }
            else if(h > k){
                s = mid + 1;
            }
            else{
                e = mid - 1;
            }
        }
        
        return ans;
    }
};
