int solve(vector<vector<int>> &points,vector<vector<int>> &dp,int day,int last){
    // base case
    if(day == 0){
        int maxi = 0;
        for(int task=0;task<points[0].size();task++){
            if(task != last){
                maxi = max(maxi,points[0][task]);
            }
        }
        return maxi;
    }
    
    // checking if our dp array already contain answer or not
    if(dp[day][last] != -1){
        return dp[day][last];
    }
    
    int maxi = 0;
    
    for(int task=0;task<points[0].size();task++){
        if(task != last){
            int point = points[day][task] + solve(points,dp,day-1,task);
            maxi = max(maxi,point);
        }
    }
    dp[day][last] = maxi;
    return dp[day][last];
}
int ninjaTraining(int n, vector<vector<int>> &points)
{
    int k = points[0].size();
    vector<vector<int>> dp(n,vector<int>(k+1,-1));
    return solve(points,dp,n-1,k);
}
