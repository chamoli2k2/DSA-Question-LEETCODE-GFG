#include<bits/stdc++.h>
string shortestSupersequence(string s1, string s2)
{
	// Write your code here.
    int n = s1.size();
    int m = s2.size();
    vector<vector<int>> dp(n+1,vector<int>(m+1,0));
    
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(s1[i-1] == s2[j-1]){
                dp[i][j] = 1 + dp[i-1][j-1];
            }else{
                // case 1 :
                int case1 = dp[i-1][j];
                // case 2 : 
                int case2 = dp[i][j-1];
                
                dp[i][j] = max(case1,case2);
            }
        }
    }
    
    string ans = "";
    
    int i = n;
    int j = m;
    while(i > 0 and j > 0){
        if(s1[i-1] == s2[j-1]){
            ans += s1[i-1];
            i--;
            j--;
        }
        else if(dp[i-1][j] > dp[i][j-1]){
            ans += s1[i-1];
            i--;
        }
        else{
            ans += s2[j-1];
            j--;
        }
    }
    
    while(i > 0){
        ans += s1[i-1];
        i--;
    }
    
    while(j > 0){
        ans += s2[j-1];
        j--;
    }
    
    reverse(ans.begin(),ans.end());
    
    return ans;
}
