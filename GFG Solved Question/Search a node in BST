Approach 1 :

void solve(Node* root,int x,bool &flag1,bool &flag2){
    if(root == NULL){
        return;
    }
    
    if(root->data == x){
        flag1 = true;
    }
    solve(root->left,x,flag1,flag2);
    if(root->data == x){
        flag1 = true;
    }
    solve(root->right,x,flag1,flag2);
    
    flag2 = (flag2 or flag1);
}
bool search(Node* root, int x) {
    bool flag1 = false;
    bool flag2 = false;
    solve(root,x,flag1,flag2);
    return flag2;
}

Approach 2 :
bool search(Node* root, int x) {
    if(root == NULL){
        return false;
    }
    
    if(root->data == x){
        return true;
    }
    
    if(root->data > x){
        search(root->left,x);
    }else{
        search(root->right,x);
    }
}

Approach 3 :
bool search(Node* root, int x) {
    while(root != NULL){
        if(root->data == x){
            return true;
        }
        
        if(root->data > x){
            root = root->left;
        }else{
            root = root->right;
        }
    }
    
    return false;
}
