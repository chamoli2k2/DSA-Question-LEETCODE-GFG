class Solution
{
    private:
    void solve(vector<vector<char>> &grid,int i,int j,int n,int m){
        // base case
        if(i < 0 || j < 0 || j >= m || i >= n || grid[i][j] == 'O'){
            return;
        }
        
        grid[i][j] = 'O';
        
        solve(grid,i-1,j,n,m); // up
        solve(grid,i+1,j,n,m); // down
        solve(grid,i,j+1,n,m); // right
        solve(grid,i,j-1,n,m); // left

    }
    public:
    //Function to find the number of 'X' total shapes.
    int xShape(vector<vector<char>>& grid) 
    {
        int ans = 0;
        int n = grid.size();
        int m = grid[0].size();
        
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j] == 'X'){
                    ans++;
                    solve(grid,i,j,n,m);
                }
            }
        }
        
        return ans;
    }
};
