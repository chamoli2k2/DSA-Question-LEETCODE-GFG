class meeting{
    public:
    int start;
    int end;
    int pos;
};

class Solution
{
    private:
    static bool comparator(meeting m1,meeting m2){
        // sorting according to lower end time
        if(m1.end < m2.end){
            return true;
        }
        else if(m1.end > m2.end){
            return false;
        }
        
        // means m1.end == m2.end
        if(m1.pos < m2.pos){
            return true;
        }
        
        return false;
    }
    public:
    //Function to find the maximum number of meetings that can
    //be performed in a meeting room.
    int maxMeetings(int start[], int end[], int n)
    {
         meeting meet[n];
         // initialising meet
         for(int i=0;i<n;i++){
             meet[i].start = start[i];
             meet[i].end = end[i];
             meet[i].pos = i;
         }
         
         // sorting the meet 
         sort(meet,meet+n,comparator);
         
         // first meeting with least end time will occur for sure
         int count = 1;
         int limit = meet[0].end;
         
         for(int i=1;i<n;i++){
            if(meet[i].start > limit){
                limit = meet[i].end;
                count ++;
            }
         }
         
         return count;
    }
};
