class Solution
{
    public:
    //Function to return the minimum cost of connecting the ropes.
    long long minCost(long long arr[], long long n) {
        
        // initialising the min priority queue
        priority_queue<long long,vector<long long>,greater<long>> pq;
        
        // min heap may element dalo
        for(int i=0;i<n;i++){
            pq.push(arr[i]);
        }
        
        long long sum = 0;
        long long cost = 0;
        // finding out two minimum element form queue and finding the sum
        
        while(pq.size()>1){
            long long a = pq.top();
            pq.pop();
            
            long long b = pq.top();
            pq.pop();
            
            sum = (a+b);
            cost += sum;
            pq.push(sum);
        }
        
        return cost;
    }
};
