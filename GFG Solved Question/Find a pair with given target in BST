class Solution{
  private:
  void solve(Node* root,vector<int> &ans){
      // base case
      if(root == NULL){
          return ;
      }
      
      solve(root->left, ans);
      ans.push_back(root->data);
      solve(root->right,ans);
  }
  public:
    // root : the root Node of the given BST
    // target : the target sum
    int isPairPresent(struct Node *root, int target)
    {
        vector<int> ans;
        
        solve(root,ans);
        int i=0,j=ans.size()-1;
        while(i<j){
            if(ans[i]+ans[j] == target){
                return 1;
            }else if (ans[i]+ans[j] > target){
                j--;
            }else{
                i++;
            }
        }
        return 0;
    }
};
