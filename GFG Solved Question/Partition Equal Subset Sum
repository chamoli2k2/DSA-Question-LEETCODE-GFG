class Solution{
public:
    int equalPartition(int n, int arr[])
    {
        long sum = 0;
        sum = accumulate(arr,arr+n,sum);
        
        // if sum is odd there is no way to make two subset of equal sum
        if(sum & 1){
            return 0;
        }
        
        
        int w = sum/2;
        vector<vector<bool>> dp(n+1,vector<bool>(w+1,false));
        for(int i=0;i<n+1;i++){
            dp[i][0] = true;
        }
        
        for(int i=1;i<n+1;i++){
            for(int j=1;j<w+1;j++){
                if(arr[i-1] <= j){
                    dp[i][j] = dp[i-1][j-arr[i-1]] or dp[i-1][j];
                }else{
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        
        if(dp[n][w]){
            return 1;
        }
        return 0;
    }
};
