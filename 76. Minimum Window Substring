class Solution {
public:
    string minWindow(string s, string t) {
        int n = s.size(), m = t.size(), maxi = INT_MAX, i = 0, j = 0, count = 0, start;
        unordered_map<char,int> mp;

        // Preprocessing
        for(int k=0; k<m; k++) mp[t[k]]++;
        count = mp.size();

        while(j < n){
            mp[s[j]]--;
            if(mp[s[j]] == 0) count--;

            while(i <= j && count == 0){
                if(j-i+1 < maxi){
                    maxi = j-i+1;
                    start = i;
                }
                mp[s[i]]++;
                if(mp[s[i]] > 0) count++;
                i++;
            }
            
            j++;
        } 

        return maxi == INT_MAX ? "" : s.substr(start,maxi);
    }
};
