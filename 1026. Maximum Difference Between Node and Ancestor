class Solution {
private:
    pair<int,int> solve(TreeNode* root,int &ans){
        // Base case
        if(root == NULL){
            return {INT_MAX,INT_MIN};
        }

        pair<int,int> ls = solve(root->left,ans);
        pair<int,int> rs = solve(root->right,ans);

        int k = root->val;
        if(ls.first != INT_MAX){
            ans = max({ans,abs(k-ls.first),abs(k-ls.second)});
        }

        if(rs.first != INT_MAX){
            ans = max({ans,abs(k-rs.first),abs(k-rs.second)});
        }

        int mini = min({k,ls.first,rs.first});
        int maxi = max({k,ls.second,rs.second});

        return {mini,maxi};
    }
public:
    int maxAncestorDiff(TreeNode* root) {
        int ans = INT_MIN;
        solve(root,ans);
        return ans;
    }
};
