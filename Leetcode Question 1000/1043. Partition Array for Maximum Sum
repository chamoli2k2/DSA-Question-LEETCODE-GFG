class Solution {
private:
    int solve(vector<int> &nums,vector<int> &dp,int idx,int n,int k){
        // Base case
        if(idx == n) return 0;

        if(dp[idx] != -1) return dp[idx];

        int ans = -1e9, maxi = -1e9;
        for(int j=idx;j<min(idx+k,n);j++){
            maxi = max(maxi,nums[j]);
            int cost = (j-idx+1) * maxi + solve(nums,dp,j+1,n,k);
            ans = max(ans,cost);
        }

        return dp[idx] = ans;
    }
public:
    int maxSumAfterPartitioning(vector<int>& arr, int k) {
        int n = size(arr);
        vector<int> dp(n,-1);
        return solve(arr,dp,0,n,k);
    }
};
