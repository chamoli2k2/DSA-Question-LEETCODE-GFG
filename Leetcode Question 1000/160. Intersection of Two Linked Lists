// Algorithm 
// Find the length of both linked list and find there difference
// Move the bigger linked list difference time so that both linked list reaches same distination
// Now move both linked list simultaneously and check if we got intersection or not till we reach
// NULL
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        // Base Case
        if(headA == NULL || headB == NULL) return NULL;

        ListNode* a = headA;
        ListNode* b = headB;

        while(a != b){
            a = a == NULL ? headB : a->next;
            b = b == NULL ? headA : b->next;
        }

        return a;
    }
};
