class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        int XOR = 0;
        for(int i=0;i<nums.size();i++){
            XOR = XOR ^ nums[i];
        }

        vector<int> set;
        vector<int> notSet;

        int k = 0;
        while(k < 32){
            if(XOR & (1 << k)){
                break;
            }
            k++;
        }

        for(int i=0;i<nums.size();i++){
            if(nums[i] & (1 << k)){
                set.push_back(nums[i]);
            }
            else{
                notSet.push_back(nums[i]);
            }
        }

        int first = 0, second = 0;
        for(int i=0;i<set.size();i++){
            first = first ^ set[i];
        }

        for(int i=0;i<notSet.size();i++){
            second = second ^ notSet[i];
        }

        vector<int> ans = {first,second};

        return ans;
    }
};
