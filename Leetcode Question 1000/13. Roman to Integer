class Solution {
public:
    int romanToInt(string s) {
        int n = s.size();
        int ans = 0;
        
        // Creating map 
        unordered_map<char,int> roman;
        roman['I'] = 1;
        roman['V'] = 5;
        roman['X'] = 10;
        roman['L'] = 50;
        roman['C'] = 100;
        roman['D'] = 500;
        roman['M'] = 1000;
        // base case if size of s -> 1
        if(n == 1){
          return roman[s[0]];  
        }
        // Simple logic iterate over the array if we find previous is smaller than current than we subtract 2 from answer
        // For eg : IX -> i = 0
                    //    ans = 1 
                    // -> i = 1
                    //    X is greater than previous , ans = 11 - 2 -> ans = 9
        
        // Do this for entire string and finally you will get your answer
        ans = roman[s[0]];
        for(int i=1;i<n;i++){
            
            if(roman[s[i-1]] < roman[s[i]]){
                ans = ans + (roman[s[i]] - 2 * roman[s[i-1]]);
            }
            else{
                ans = ans + roman[s[i]];
            }
        }
        
        return ans;
    }
    
};
