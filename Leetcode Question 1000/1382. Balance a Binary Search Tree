class Solution {
private:
    void solve(TreeNode* root,vector<int> &ans){
    // base case
    if(root == NULL){
        return;
    }
    
    solve(root->left,ans);
    ans.push_back(root->val);
    solve(root->right,ans);
}
TreeNode* makeBST(vector<int> &ans,int start,int end){
    // base case
    if(start > end){
        return NULL;
    }
    
    // finding mid;
    int mid = (start+end)/2;
    
    TreeNode* root = new TreeNode(ans[mid]);
    
    root->left = makeBST(ans,start,mid-1);
    root->right = makeBST(ans,mid+1,end);
    
    return root;
}
public:
    TreeNode* balanceBST(TreeNode* root) {
        vector<int> ans;
	    solve(root,ans);
	    int start = 0;
	    int end = ans.size()-1;
	    TreeNode* temp = makeBST(ans,start,end);
	    return temp;
    }
};
