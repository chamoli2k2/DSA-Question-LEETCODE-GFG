class Solution {
public:
    int maxProfitAssignment(vector<int>& diff, vector<int>& profit, vector<int>& worker) {
        int n = diff.size(), m = worker.size();
        int ans = 0;

        vector<pair<int,int>> nums;
        for(int i=0;i<n;i++){
            nums.push_back({diff[i],profit[i]});
        }
        
        sort(nums.begin(),nums.end());
        int maxi = nums[0].second;

        for(int i=1;i<n;i++){
            maxi = max(maxi,nums[i].second);
            nums[i].second = maxi;
        }

        for(int i=0;i<m;i++){
            int d = worker[i];
            int s = 0, e = n - 1, mid, t = 0;

            while(s <= e){
                mid = s + (e - s) / 2;
                if(d >= nums[mid].first){
                    t = nums[mid].second;
                    s = mid + 1;
                }
                else{
                    e = mid - 1;
                }
            }

            ans += t;
        }

        return ans;
    }
};
