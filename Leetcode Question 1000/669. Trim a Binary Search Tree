/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* trimBST(TreeNode* root, int low, int high) {
        // Base case
        if(root == NULL) return NULL;

        TreeNode* ls = trimBST(root->left,low,high);
        if(root->left != ls){
            root->left = ls;
        }
        TreeNode* rs = trimBST(root->right,low,high);
        if(root->right != rs){
            root->right = rs;
        }

        if(root->val < low || root->val > high){
            return (root->left) ? root->left : root->right;
        }

        return root;
    }
};
