class Solution {
private:
    int solve(string &s1,string &s2,int i,int j,int n,int m){
        // Base case
        if(i == n){
            int sum = 0;
            for(int k=j;k<m;k++){
                sum += s2[k];
            }
            return sum;
        }

        if(j == m){
            int sum = 0;
            for(int k=i;k<n;k++){
                sum += s1[k];
            }
            return sum;
        }

        if(dp[i][j] != -1) return dp[i][j];

        if(s1[i] == s2[j]){
            return dp[i][j] = solve(s1,s2,i+1,j+1,n,m);
        }

        int c1 = s1[i] + solve(s1,s2,i+1,j,n,m);
        int c2 = s2[j] + solve(s1,s2,i,j+1,n,m);

        return dp[i][j] = min(c1,c2);
    }
public:
    int dp[1001][1001];
    int minimumDeleteSum(string s1, string s2) {
        int n = size(s1), m = size(s2);
        memset(dp,-1,sizeof(dp));
        return solve(s1,s2,0,0,n,m);
    }
};
