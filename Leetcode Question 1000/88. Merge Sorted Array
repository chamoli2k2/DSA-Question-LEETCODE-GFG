class Solution {
public:
    void merge(vector<int>& nums1, int m, vector<int>& nums2, int n) {
        // Two pointer appraoch
        // make pointer i , j , k
        // i -> points last filed index of nums1 
        // j -> points last filed index of nums2
        // k -> points last or size of nums1 (actuall size)
        
        int i = m - 1;
        int j = n - 1;
        int k = nums1.size() - 1;
        
        // compare element at index i and j 
        // if nums[i] <= num[j] copy the jth index at nums[k] and decrease both k and j
        // if nums[i] > nums[j] copy the ith index at kth index and decrement both k and i
        // loop will run untill any of i and j is greater than 0
        
        while(i >= 0 and j >= 0){
            if(nums1[i] <= nums2[j]){
                nums1[k--] = nums2[j--];
            }else{
                nums1[k--] = nums1[i--];
            }
        }
        
        // if there is any value left in nums2
        while(j >= 0){
            nums1[k--] = nums2[j--];
        }
    }
};
