class Solution {
public:
    long long maximumSumOfHeights(vector<int>& maxheights) {
        long long ans = 0, n = size(maxheights);
        for(int i=0;i<n;i++) {
            long long currsum = 0, x = i+1, y = i-1;
            long long prev = maxheights[i];
            // Right
            while(x<n) {
                if(maxheights[x] >= prev){
                    currsum += prev;
                }          
                else{
                    prev = maxheights[x];
                    currsum += 1LL*maxheights[x];
                }
                x++;
            }

            prev = maxheights[i];
            // Left
            while(y >= 0) {
                if(maxheights[y] >= prev){
                    currsum += prev;
                }          
                else{
                    prev = maxheights[y];
                    currsum += 1LL*maxheights[y];
                }
                y--;
            }
            
            
            ans = max(ans, currsum+maxheights[i]);
        }
       
        return ans;
    }
};
