class Solution {
public:
    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        // base case
        if(list1 == NULL && list2 == NULL){
            return NULL;
        }
        else if(list1 == NULL){
            return list2;
        }
        else if(list2 == NULL){
            return list1;
        }

        // Defining Variable 
        ListNode* small; // Carry address of smaller node
        ListNode* large; // Carry address of larger node
        ListNode* temp = NULL;
        if(list1->val <= list2->val){
            small = list1;
            large = list2;
        }
        else{
            small = list2;
            large = list1;
        }

        // Storing answer for returning
        ListNode* ans = small;
        // While any of these link is not Not NULL
        while(small && large){
            while(small && small->val <= large->val){
                temp = small;
                small = small->next;
            }

            temp->next = large;
            ListNode* dummy = large;
            large = small;
            small = dummy;
        }

        return ans;
    }
};
