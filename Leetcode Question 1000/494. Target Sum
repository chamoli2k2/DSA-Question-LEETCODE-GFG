class Solution {
public:
    int findTargetSumWays(vector<int>& nums, int target) {
        int sum = 0;
        sum = accumulate(nums.begin(),nums.end(),sum);
        if(target > sum or (sum + target)&1){
            return 0;
        }
    
        int range = (sum+target)/2;
        if(range<0){
            return 0;
        }
        int n = nums.size();
        vector<vector<int>> dp(n+1,vector<int>(range+1,0));
        
        dp[0][0] = 1;
        
        for(int i=1;i<n+1;i++){
            for(int j=0;j<range+1;j++){
                if(nums[i-1] <= j){
                    dp[i][j] = dp[i-1][j-nums[i-1]] + dp[i-1][j];
                }else{
                    dp[i][j] = dp[i-1][j];
                }
            }
        }
        
        return dp[n][range];
    }
};
