class Solution {
public:
    string shortestPalindrome(string &s) {
        int n = s.size();
        if(n == 0) return "";
        string t = s;
        reverse(begin(t),end(t));
        s += "#" + t;
        vector<int> LPS(2*n,0);
        int pre = 0, suf = 1;

        while(suf < 2*n){
            if(s[pre] == s[suf]){
                LPS[suf] = pre + 1;
                pre++, suf++;
            }
            else{
                if(pre == 0){
                    suf++;
                }
                else{
                    pre = LPS[pre-1];
                }
            }
        }

        int k = LPS[2*n-1];
        string ans = "";
        for(int i=0; i<n-k-1; i++){
            ans += t[i];
        }

        reverse(begin(t),end(t));
        return ans + t;
    }
};
