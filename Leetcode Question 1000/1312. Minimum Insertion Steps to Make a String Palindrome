class Solution {
private:
    int solve(string &s1,string &s2,int i,int j,int n){
        // Base case
        if(i >= n || j >= n) return 0;

        if(dp[i][j] != -1) return dp[i][j];

        // match
        if(s1[i] == s2[j]){
            return dp[i][j] = 1 + solve(s1,s2,i+1,j+1,n);
        }

        // not match
        int c1 = solve(s1,s2,i+1,j,n);
        int c2 = solve(s1,s2,i,j+1,n);

        return dp[i][j] = max(c1,c2);
    }
public:
    int dp[502][502];
    int minInsertions(string s1) {
        string s2 = s1;
        reverse(begin(s2),end(s2));
        int n = s1.size();
        memset(dp,-1,sizeof(dp));
        int x = solve(s1,s2,0,0,n);
        return n - x;
    }
};
