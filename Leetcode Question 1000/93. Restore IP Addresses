class Solution {
private:
    void solve(string &s,int idx,int k,string str,vector<string> &ans){
        // Base case
        if(idx >= s.size()){
            if(k == 0){
                str.pop_back();
                ans.push_back(str);
            }
            return;
        }

        string temp = "";
        
        int limit;
        if(idx+3 < s.size()){
            limit = idx + 3;
        }
        else{
            limit = s.size();
        }

        for(int j=idx;j<limit;j++){
            temp += s[j];

            if(temp.size()>1 && temp[0]=='0' && (stoi(temp) > 0 || stoi(temp) == 0)){
               return;	
            }

            if(stoi(temp) >= 0 && stoi(temp) <= 255){
                solve(s,j+1,k-1,str+temp+'.',ans);
            }
            else{
                return;
            }
        }
    }
public:
    vector<string> restoreIpAddresses(string s) {
        // Base case
        if(s.size() > 12 || s.size() < 4){
            return {};
        }
        vector<string> ans;

        solve(s,0,4,"",ans);
        return ans;
    }
};
