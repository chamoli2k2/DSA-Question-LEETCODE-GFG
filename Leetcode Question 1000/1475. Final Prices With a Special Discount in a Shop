class Solution {
public:
    vector<int> finalPrices(vector<int>& prices) {
        // Monotonious stack
        int n = prices.size();
        vector<int> temp(n);
        stack<int> st;
        
        // finding next smaller element
        for(int i=n-1;i>=0;i--){
            int num = prices[i];
            
            while(!st.empty() && st.top() > num){
                st.pop();
            }
            if(st.empty()){
                temp[i] = 0;
            }else{
                temp[i] = st.top();
            }
            st.push(num);
        }
        

        for(int i=0;i<n-1;i++){
            prices[i] = (prices[i] - temp[i]);
        }
        
        return prices;
    }
};
