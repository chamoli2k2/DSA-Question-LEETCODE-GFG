class Solution {
private:
    int solve(vector<int> &nums1,vector<int> &nums2,int i,int j,int n,int m){
        // Base case
        if(i >= n || j >= m) return 0;

        if(dp[i][j] != -1) return dp[i][j];

        int count = 0;
        if(nums1[i] == nums2[j]){
            return dp[i][j] = 1 + solve(nums1,nums2,i+1,j+1,n,m);
        }

        int c1 = solve(nums1,nums2,i,j+1,n,m);
        int c2 = solve(nums1,nums2,i+1,j,n,m);

        return dp[i][j] = max(c1,c2);
    }
public:
    int dp[501][501];
    int maxUncrossedLines(vector<int>& nums1, vector<int>& nums2) {
        int n = size(nums1), m = size(nums2);
        memset(dp,-1,sizeof(dp));
        return solve(nums1,nums2,0,0,n,m);
    }
};
