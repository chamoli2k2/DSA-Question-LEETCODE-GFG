class Solution {
public:
    int maxArea(int h, int w, vector<int>& horizontalCuts, vector<int>& verticalCuts) {
        // Approach find max difference in both array
        int maxHdiff = 0;
        int maxVdiff = 0;
        
        // size of both array
        int n = horizontalCuts.size();
        int m = verticalCuts.size();
        
        sort(horizontalCuts.begin(),horizontalCuts.end());
        sort(verticalCuts.begin(),verticalCuts.end());
        
        int previous = 0;
        for(int i=0;i<n;i++){
            maxHdiff = max(horizontalCuts[i]-previous,maxHdiff);
            previous = horizontalCuts[i];
        }
        maxHdiff = max(maxHdiff,h-horizontalCuts[n-1]);
        
        previous = 0;
        for(int i=0;i<m;i++){
            maxVdiff = max(verticalCuts[i]-previous,maxVdiff);
            previous = verticalCuts[i];
        }
        maxVdiff = max(maxVdiff,w-verticalCuts[m-1]);
        
        int mod = 1e9 + 7;
        
        int ans = (1LL * maxHdiff * maxVdiff) % mod;
        
        return ans;
    }
};
