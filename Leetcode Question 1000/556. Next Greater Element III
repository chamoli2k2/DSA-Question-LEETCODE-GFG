class Solution {
private:
    long long stol(string s){
        long long ans = 0;
        for(auto i : s){
            ans = ans * 10 + i - '0';
        }
        return ans;
    }
public:
    int nextGreaterElement(int n) {
        string s = to_string(n);
        int i = s.size() - 1;

        while(i-1 >= 0 && s[i] <= s[i-1]){
            i--;
        }

        // Base case
        if(i <= 0) return -1;

        // Finding upperbound
        // Sorting so we can find upperbound
        sort(s.begin()+i,s.end());

        // finding index of just greater element
        int idx = upper_bound(s.begin()+i,s.end(),s[i-1]) - s.begin();

        swap(s[i-1],s[idx]);

        // Sorting the rest element
        sort(s.begin()+i,s.end());

        long long ans = stol(s);
        return ans <= INT_MAX ? ans : -1;
    }
};
