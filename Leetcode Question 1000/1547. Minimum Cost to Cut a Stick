class Solution {
private:
    int solve(vector<int> &cuts,vector<vector<int>> &dp,int i,int j){
        // Base case
        if(i > j) return 0;

        if(dp[i][j] != -1) return dp[i][j];

        int ans = 1e9;
        for(int k=i;k<=j;k++){
            int cost = cuts[j+1] - cuts[i-1] + solve(cuts,dp,i,k-1) + solve(cuts,dp,k+1,j);
            ans = min(ans,cost);
        }

        return dp[i][j] = ans;
    }
public:
    int minCost(int n, vector<int>& cuts) {
        int c = size(cuts);
        cuts.push_back(0);
        cuts.push_back(n);
        sort(begin(cuts),end(cuts));
        vector<vector<int>> dp(c+2,vector<int>(c+2,-1));
        return solve(cuts,dp,1,c);
    }
};
