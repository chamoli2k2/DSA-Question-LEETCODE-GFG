class Solution {
private:
    string solve(string &s){
        string ans = "";
        for(int i=0;i<s.size();i++){
            if(s[i] == '0' && ((s[i+1] == '.' && i+1 < s.size()) || i+1 == s.size())){
                ans += '0';
            }
            else if(s[i] != '0'){
                ans += s[i];
            }
        }
        return ans;
    }
public:
    int compareVersion(string version1, string version2) {
        string k1;
        string k2;

        k1 = solve(version1);
        k2 = solve(version2);

        cout<<k1<<endl<<k2;
        int i = 0;
        int j = 0;

        while(i < k1.size() && j < k2.size()){
            long long num1 = 0;
            long long num2 = 0;
            while(i < k1.size() && k1[i] != '.'){
                num1 = num1 *1LL* 10 + 1LL*k1[i] - '0';
                i++;
            }
            
            while(j < k2.size() && k2[j] != '.'){
                num2 = num2 * 10 + k2[j] - '0';
                j++;
            }

            if(num1 > num2){
                return 1;
            }
            else if(num2 > num1){
                return -1;
            }
            i++;
            j++;
        }

        int count = 0;
        while(i < k1.size()){
            if(k1[i] != '0' && k1[i] != '.'){
                count++;
            }
            i++;
        }

        if(count) return 1;

        while(j < k2.size()){
            if(k2[j] != '0' && k2[j] != '.'){
                count++;
            }
            j++;
        }

        if(count) return -1;

        return 0;
    }

};
