class Solution {
private:
    static bool cmp(pair<int,string> &p1,pair<int,string> &p2){
        // If freq is same
        if(p1.first == p2.first){
            return p1.second < p2.second;
        }

        return p1.first > p2.first;
    }
public:
    vector<string> topKFrequent(vector<string>& words, int k) {
        int n = words.size();
        vector<string> ans;

        // Creating the priority queue 
        unordered_map<string,int> mp;

        for(int i=0;i<n;i++){
            mp[words[i]]++;
        }

        // putting the element into a vector
        vector<pair<int,string>> arr;
        for(auto i : mp){
            arr.push_back({i.second,i.first});
        }

        // Sorting the array
        sort(arr.begin(),arr.end(),cmp);

        // Putting 'k' element into answer
        for(int i=0;i<k;i++){
            ans.push_back(arr[i].second);
        }

        return ans;
    }
};
