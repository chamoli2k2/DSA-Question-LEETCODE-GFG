class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        int mp1[26] = {0}, mp2[26] = {0};
        int n = s1.size(), m = s2.size(), flag = 1;
        if(m < n) return false;

        for(int i=0;i<n;i++){
            mp1[s1[i]-'a']++;
        }

        // creating the window of size n
        for(int i=0;i<n;i++){
            mp2[s2[i]-'a']++;
        }

        // matching with the mp1
        for(int i=0;i<26;i++){
            if(mp1[i] != mp2[i]){
                flag = 0;
                break;
            }
        }

        if(flag) return true;

        for(int i=n;i<m;i++){
            flag = 1;
            // removing the previous element
            mp2[s2[i-n]-'a']--;

            // adding the element 
            mp2[s2[i]-'a']++;

            for(int i=0;i<26;i++){
                if(mp1[i] != mp2[i]){
                    flag = 0;
                    break;
                }
            }

            if(flag) return true;
        }

        return false;
    }
};
