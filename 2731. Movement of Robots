int mod = 1e9 + 7;
class Solution {
public:
    int sumDistance(vector<int>& nums, string s, int d) {
        long long n = size(s);
        vector<long long> arr(n), suf(n);
        for(int i=0;i<n;i++){
            long long num;
            if(s[i] == 'R'){
                num = 1LL*nums[i] + d;
            }
            else{
                num = 1LL*nums[i] - d;
            }
            arr[i] = num;
        }
        
        long long ans = 0;
        sort(begin(arr),end(arr));
        suf[n-1] = arr[n-1];
        for(int i=n-2;i>=0;i--){
            suf[i] = suf[i+1] + arr[i];
        }
        
        for(int i=0;i<n-1;i++){
            long m = 1LL*n - i - 1;
            long k1 = m *1LL* arr[i];
            long k2 = 1LL*suf[i+1];
            ans = (ans%mod + abs(k1-k2)%mod) % mod;
        }
        
        return ans;
    }
};
