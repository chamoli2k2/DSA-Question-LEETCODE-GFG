class Solution {
private:
    void FillMonth(vector<vector<int>> &nums,string &s,string &e){
        int startMonth = (s[0]-'0')*10 + s[1]-'0';
        int endMonth = (e[0]-'0')*10 + e[1]-'0';
        int startDay = (s[3]-'0')*10 + s[4]-'0';
        int endDay = (e[3]-'0')*10 + e[4]-'0';

        // Case 1 : if start and end month is same
        if(startMonth == endMonth){
            for(int i=startDay-1;i<endDay;i++){
                nums[startMonth-1][i] += 1;
            }
        }
        // Case 2 : if start month and end month is not same
        else{
            // Adding starting first month
            for(int i=startDay-1;i<nums[startMonth-1].size();i++){
                nums[startMonth-1][i] += 1;
            }
            // Adding months between start and end month
            for(int i=startMonth;i<endMonth-1;i++){
                for(int j=0;j<nums[i].size();j++){
                    nums[i][j] += 1;
                }
            }
            // Adding last month
            for(int j=0;j<endDay;j++){
                nums[endMonth-1][j] += 1;
            }
        }
    }
public:
    int countDaysTogether(string arriveAlice, string leaveAlice, string arriveBob, string leaveBob) {
        // Creating calender
        vector<vector<int>> calender;
        // Pushing Jan and feb
        vector<int> jan(31,0), feb(28,0);
        calender.push_back(jan);
        calender.push_back(feb);

        int k = 2;
        while(k--){
            int flag = 0;
            for(int i=0;i<5;i++){
                if(flag == 0){
                    vector<int> temp(31,0);
                    calender.push_back(temp);
                    flag = 1;
                }
                else{
                    vector<int> temp(30,0);
                    calender.push_back(temp);
                    flag = 0;
                }
            }
        }

        // Now calender is created
        // filling the month
        FillMonth(calender,arriveAlice,leaveAlice);
        FillMonth(calender,arriveBob,leaveBob);

        int ans = 0;
        for(int i=0;i<12;i++){
            for(int j=0;j<calender[i].size();j++){
                if(calender[i][j] == 2){
                    ans++;
                }
            }
        }

        return ans;
    }
};
