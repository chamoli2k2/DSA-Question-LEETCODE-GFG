class NumMatrix {
private:
    vector<vector<int>> nums;
public:
    NumMatrix(vector<vector<int>>& matrix) {
        int n = matrix.size(), m = matrix[0].size();
        nums.resize(n,vector<int>(m));
        nums[0][0] = matrix[0][0];

        // Preprocessing
        for(int i=1; i<m; i++){
            nums[0][i] = nums[0][i-1] + matrix[0][i];
        }

        for(int i=1; i<n; i++){
            nums[i][0] = nums[i-1][0] + matrix[i][0];
        }

        // Finall Processing
        for(int i=1; i<n; i++){
            for(int j=1; j<m; j++){
                nums[i][j] = nums[i-1][j] + nums[i][j-1] - nums[i-1][j-1] + matrix[i][j];
            }
        }
    }
    
    int sumRegion(int row1, int col1, int row2, int col2) {
        int ans = nums[row2][col2];
        if(row1-1 >= 0) ans -= nums[row1-1][col2];
        if(col1-1 >= 0) ans -= nums[row2][col1-1];
        if(row1-1 >= 0 && col1-1 >= 0) ans += nums[row1-1][col1-1];
        return ans;
    }
};
