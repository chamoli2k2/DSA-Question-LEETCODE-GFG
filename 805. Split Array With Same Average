class Solution {
private:
    bool check(vector<int> &nums,vector<vector<vector<bool>>> &dp,int s1,int idx,int length){
        // Base case
        if(length == 0){
            return s1 == 0;
        }

        if(idx >= nums.size()) return false;

        if(dp[idx][length][s1] == false) return false;

        if(s1 >= nums[idx]){
            if(check(nums,dp,s1-nums[idx],idx+1,length-1)){
                return dp[idx][length][s1] = true;
            }
        }

        if(check(nums,dp,s1,idx+1,length)){
            return dp[idx][length][s1] = true;
        }

        return dp[idx][length][s1] = false;
    }
public:
    bool splitArraySameAverage(vector<int>& nums) {
        // Base case
        int n = nums.size();
        if(n < 2) return false;
        int TotalSum = accumulate(nums.begin(),nums.end(),0);
        vector<vector<vector<bool>>> dp(n,vector<vector<bool>>(n,vector<bool>(TotalSum+1,true)));

        for(int i=1;i<=n-1;i++){
            int S1 = TotalSum * i;
            if(S1 % n == 0){
                S1 /= n;

                if(check(nums,dp,S1,0,i)){
                    return true;
                }
            }
        }

        return false;
    }
};
