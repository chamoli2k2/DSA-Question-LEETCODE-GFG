

class Solution
{
	public:
	//Function to find sum of weights of edges of the Minimum Spanning Tree.
    int spanningTree(int V, vector<vector<int>> adj[])
    {
        priority_queue<pair<int,pair<int,int>>> pq;
        pq.push({0, {0, -1}});
        vector<int> visited(V, 0);
        vector<pair<int,int>> parent;
        
        int totalCost = 0;
        while(!pq.empty()){
            int cost = -1*pq.top().first;
            int node = pq.top().second.first;
            int parentNode = pq.top().second.second;
            pq.pop();
            
            // If current node is already a part of mst
            if(visited[node] == 1) continue;
            
            // Make him part of mst
            visited[node] = 1;
            totalCost += cost;
            parent.push_back({node, parentNode});
            
            for(auto &it : adj[node]){
                int adjNode = it[0], wt = it[1];
                if(visited[adjNode] == 0){
                    pq.push({-wt, {adjNode, node}});
                }
            }
        }
        
        return totalCost;
    }
};
