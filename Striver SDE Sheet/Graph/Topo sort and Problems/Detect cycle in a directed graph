class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        
	    vector<int> inorder(V, 0);
	    
	    for(int i=0; i<V; i++){
	        for(auto &it : adj[i]){
	            inorder[it]++;
	        }
	    }
	    
	    queue<int> q;
	    for(int i=0; i<V; i++){
	        if(inorder[i] == 0){
	            q.push(i);
	        }
	    }
	    
	    int countNode = 0;
	    while(!q.empty()){
	        int node = q.front();
	        q.pop();
	        
	        countNode += 1;
	        
	        for(auto &it : adj[node]){
	            inorder[it]--;
	            if(inorder[it] == 0){
	                q.push(it);
	            }
	        }
	    }
	    
	    return countNode == V ? false : true;
    }
};