class Solution {
    private:
    void dfs(vector<int> adjList[], vector<int> &visited, int node){
        visited[node] = 1;
        for(auto &it : adjList[node]){
            if(visited[it] == 0){
                dfs(adjList, visited, it);
            }
        }
    }
  public:
    int numProvinces(vector<vector<int>> adj, int V) {
        int ans = 0, n = adj.size(), m = adj[0].size();
        vector<int> adjList[V];
        
        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                if(adj[i][j] == 1){
                    adjList[i].push_back(j);
                }
            }
        }
        
        vector<int> visited(V, 0);
        for(int i=0; i<V; i++){
            if(visited[i] == 0){
                dfs(adjList, visited, i);
                ans++;
            }
        }
        
        return ans;
    }
};