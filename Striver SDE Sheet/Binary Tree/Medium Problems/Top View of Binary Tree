class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        queue<pair<Node* ,int>> q;
        q.push({root, 0});
        map<int, int> mp;
        vector<int> ans;
        
        while(!q.empty()){
            int n = q.size();
            
            for(int i=0; i<n; i++){
                Node* tempNode = q.front().first;
                int lvl = q.front().second;
                q.pop();
                
                if(mp.count(lvl) == 0){
                    mp[lvl] = tempNode->data;
                }
                
                if(tempNode->left) q.push({tempNode->left, lvl-1});
                if(tempNode->right) q.push({tempNode->right, lvl+1});
            }
        }
        
        for(auto &it : mp){
            ans.push_back(it.second);
        }
        
        return ans;
    }

};