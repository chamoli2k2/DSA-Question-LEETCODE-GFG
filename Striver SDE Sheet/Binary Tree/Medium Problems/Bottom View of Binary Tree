class Solution {
  public:
    vector <int> bottomView(Node *root) {
        vector<int> ans;
        queue<pair<Node*, int>> q;
        q.push({root, 0});
        map<int, int> mp;
        
        while(!q.empty()){
            int n = q.size();
            
            for(int i=0; i<n; i++){
                Node* tempNode = q.front().first;
                int lvl = q.front().second;
                q.pop();
                
                mp[lvl] = tempNode->data;
                
                if(tempNode->left) q.push({tempNode->left, lvl-1});
                if(tempNode->right) q.push({tempNode->right, lvl+1});
            }
        }
        
        for(auto &it : mp){
            ans.push_back(it.second);
        }
        
        return ans;
    }
};
