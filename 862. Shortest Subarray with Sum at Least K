class Solution {
public:
    int shortestSubarray(vector<int>& nums, int k) {
        long long n = nums.size(), ans = INT_MAX, sum = 0;
        deque<pair<long long,int>> dq;
        dq.push_back({0,-1});

        for(int i=0; i<n; i++){
            sum += 1LL*nums[i];
            long long checker = sum - k;

            while(!dq.empty() && checker >= dq.front().first){
                ans = min(ans,1LL*i-dq.front().second);
                dq.pop_front();
            }

            while(!dq.empty() && sum <= dq.back().first){
                dq.pop_back();
            }

            dq.push_back({sum,i});
        }

        return ans == INT_MAX ? -1 : ans;
    }
};
