class Solution {
    private:
    bool solve(string &s1, string &s2, int i, int j){
        // Base case
        int n = s1.size(), m = s2.size();
        if(i == n) return j == m;
        if(j == m){
            for(int k=i; k<n; k++){
                if(s1[k] == '*') continue;
                return false;
            }
            return true;
        }
        
        if(dp[i][j] != -1) return dp[i][j];
        
        
        if(s1[i] == s2[j]){
            return dp[i][j] = solve(s1, s2, i+1, j+1);
        }
        else if(s1[i] == '?'){
            return dp[i][j] = solve(s1, s2, i+1, j+1);
        }
        else if(s1[i] == '*'){
            bool c1 = solve(s1, s2, i+1, j);
            bool c2 = solve(s1, s2, i, j+1);
            
            return dp[i][j] = c1 || c2;
        }
        
        return dp[i][j] = false;
    }
  public:
    /*You are required to complete this method*/
    int dp[201][201];
    int wildCard(string pattern, string str) {
        memset(dp, -1, sizeof(dp));
        return solve(pattern, str, 0, 0);
    }
};
