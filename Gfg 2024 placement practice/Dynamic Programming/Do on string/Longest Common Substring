class Solution{
    private:
    int solve(string &s1, string &s2, int i, int j){
        int n = s1.size(), m = s2.size();
        // Base case
        if(i == n || j == m){
            return 0;
        }
        
        if(dp[i][j] != -1) return dp[i][j];
        
        int c1 = 0;
        
        if(s1[i] == s2[j]){
            c1 = 1 + solve(s1, s2, i+1, j+1);
        }
        
        
        
        int c2 = solve(s1, s2, i+1, j);
        int c3 = solve(s1, s2, i, j+1);
        
        ans = max({c1, c2, c3, ans});
        
        return dp[i][j] = c1;
    }
    public:
    int dp[1001][1001];
    int ans = 0;
    int longestCommonSubstr (string s1, string s2, int n, int m)
    {
        memset(dp, -1, sizeof(dp));
        solve(s1, s2, 0, 0);
        return ans;
    }
};