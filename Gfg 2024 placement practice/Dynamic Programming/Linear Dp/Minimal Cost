class Solution {
    private:
    int solve(vector<int> &height, int idx, int n, int k){
        // Base case
        if(idx == n-1) return 0;
        
        if(dp[idx][k] != -1) return dp[idx][k];
        
        int ans = 1e8;
        for(int i=1; i<=k; i++){
            if(idx+i < n){
                ans = min(ans, abs(height[idx+i]-height[idx]) + solve(height, idx+i, n, k));
            }
            else{
                break;
            }
        }
        
        return dp[idx][k] = ans;
    }
  public:
    int dp[1001][101];
    int minimizeCost(vector<int>& height, int n, int k) {
        memset(dp, -1, sizeof(dp));
        
        return solve(height, 0, n, k);
    }
};