class Solution{

  public:
	int minDifference(int arr[], int n)  { 
	    int totalSum = accumulate(arr, arr+n, 0);
        vector<vector<int>> dp(n, vector<int> (totalSum+1, 0));
        for(int i=0; i<n; i++){
            dp[i][0] = 1;
        }
    
        dp[0][arr[0]] = 1;
    
        for(int i=1; i<n; i++){
            for(int j=1; j<=totalSum; j++){
                int c1 = 0;
                if(arr[i] <= j){
                    c1 = dp[i-1][j-arr[i]];
                }
    
                int c2 = dp[i-1][j];
    
                dp[i][j] = c1 | c2;
            }
        }
    
        int ans = INT_MAX;
        for(int i=0; i<=totalSum/2; i++){
            if(dp[n-1][i]){
                int sum1 = i;
                int sum2 = totalSum - i;
                ans = min(ans, abs(sum2-sum1));
            }
        }
        
        return ans;
	} 
};