class Solution {
    private:
        int solve(vector<int> &nums, int idx, int prev, int n){
            // Base case
            if(idx == n){
                return 0;
            }
            
            
            if(dp[idx][prev+1] != -1) return dp[idx][prev+1];
            
            int take = 0;
            if((prev == -1) || abs(nums[idx]-nums[prev]) == 1){
                take = 1 + solve(nums, idx+1, idx, n);
            }
            
            int notTake = solve(nums, idx+1, prev, n);
            
            return dp[idx][prev+1] = max(take, notTake);
        }
  public:
    int dp[1001][1002];
    int longestSubseq(int n, vector<int> &a) {
        memset(dp, -1, sizeof(dp));
        return solve(a, 0, -1, n);
    }
};