class Solution {
  public:
    string betterString(string str1, string str2) {
        int n = str1.size();
        long long dp1[n+1], dp2[n+1];
        int last1[26], last2[26];
        
        for(int i=0; i<26; i++){
            last1[i] = last2[i] = -1;
        }
        
        dp1[0] = dp2[0] = 1;
        
        for(int i=1; i<=n; i++){
            dp1[i] = 2*dp1[i-1];
            
            if(last1[str1[i-1]-'a'] != -1){
                dp1[i] -= dp1[last1[str1[i-1]-'a']-1];
            }
            
            last1[str1[i-1]-'a'] = i;
        }
        
        for(int i=1; i<=n; i++){
            dp2[i] = 2*dp2[i-1];
            
            if(last2[str2[i-1]-'a'] != -1){
                dp2[i] -= dp2[last2[str2[i-1]-'a']-1];
            }
            
            last2[str2[i-1]-'a'] = i;
        }
        
        return dp1[n] >= dp2[n] ? str1 : str2;
    }
};