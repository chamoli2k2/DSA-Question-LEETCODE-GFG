class Solution {
private:
    int solve(vector<int> &nums, vector<int> &dp, int idx, int n){
        // Base case
        if(idx >= n){
            return 0;
        }

        if(dp[idx] != -1) return dp[idx];

        int c1 = nums[idx] + solve(nums, dp, idx+2, n);

        int c2 = solve(nums, dp, idx+1, n);

        return dp[idx] = max(c1, c2);
    }
public:
    int rob(vector<int>& nums) {
        // Base case
        int n = nums.size();
        if(n == 1) return nums[0];
        vector<int> dp1(n+1, -1), dp2(n+1, -1);

        int c1 = solve(nums, dp1, 0, n-1);
        int c2 = solve(nums, dp2, 1, n);

        return max(c1, c2);
    }
};