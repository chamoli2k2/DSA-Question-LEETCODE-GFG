class Solution {
private:
    int findArea(vector<int> &nums){
        int n = nums.size(), area = 0;
        vector<int> ls(n, 0), rs(n, 0);
        stack<pair<int,int>> st1, st2;
        st1.push({-1, -1}), st2.push({-1, n});

        for(int i=0; i<n; i++){
            int idx = n-i-1;
            
            while(st1.top().first >= nums[i]) st1.pop();
            while(st2.top().first >= nums[idx]) st2.pop();

            ls[i] = st1.top().second;
            rs[idx] = st2.top().second;

            st1.push({nums[i], i});
            st2.push({nums[idx], idx}); 
        }

        for(int i=0; i<n; i++){
            int tempArea = (rs[i]-ls[i]-1) * nums[i];
            area = max(area, tempArea);
        }

        return area;
    }
public:
    int maximalRectangle(vector<vector<char>>& matrix) {
        int n = matrix.size(), m = matrix[0].size(), ans = 0;
        vector<int> area(m, 0);

        for(int i=0; i<n; i++){
            for(int j=0; j<m; j++){
                area[j] = (matrix[i][j] == '0' ? 0 : area[j]+1);
            }

            int tempArea = findArea(area);
            ans = max(ans, tempArea);
        }

        return ans;
    }
};