class Solution {
public:
    int numberOfSubmatrices(vector<vector<char>>& grid) {
        int n = grid.size(), m = grid[0].size(), ans = 0, flag = false;
        vector<vector<int>> countX(n, vector(m, 0));
        vector<vector<int>> countY(n, vector(m, 0));

        for(int i=0; i<n; i++){
            if(grid[i][0] == 'X') countX[i][0] = 1;
            if(grid[i][0] == 'Y') countY[i][0] = 1;

            if(i > 0) countX[i][0] += countX[i-1][0];
            if(i > 0) countY[i][0] += countY[i-1][0];
        }

        for(int i=0; i<m; i++){
            if(grid[0][i] == 'Y') countY[0][i] = 1;
            if(grid[0][i] == 'X') countX[0][i] = 1;

            if(i > 0) countY[0][i] += countY[0][i-1];
            if(i > 0) countX[0][i] += countX[0][i-1];
        }

        for(int i=1; i<n; i++){
            for(int j=1; j<m; j++){
                countX[i][j] = countX[i][j-1] + countX[i-1][j] - countX[i-1][j-1] + (grid[i][j] == 'X');
                countY[i][j] = countY[i][j-1] + countY[i-1][j] - countY[i-1][j-1] + (grid[i][j] == 'Y');

                if(countX[i][j] == countY[i][j] && countX[i][j] != 0) ans++;
            }
        }

        for(int i=0; i<n; i++) if(countX[i][0] == countY[i][0] && countX[i][0] != 0) ans++;
        for(int i=0; i<m; i++) if(countX[0][i] == countY[0][i] && countY[0][i] != 0) ans++;

        return ans;
    }
};