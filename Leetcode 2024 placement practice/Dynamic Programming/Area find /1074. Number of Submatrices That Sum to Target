class Solution {
public:
    int numSubmatrixSumTarget(vector<vector<int>>& matrix, int target) {
        int n = matrix.size(), m = matrix[0].size(), ans = 0;
        

        for(int rw=0; rw<n; rw++){
            vector<int> subSum(m, 0);
            for(int i=rw; i<n; i++){
                for(int j=0; j<m; j++){
                    subSum[j] += matrix[i][j];
                }

                // Hash to lookup for value (cum_sum - K)
                unordered_map<int, int> mp;
                mp[0] = 1;
            
                int max_sum = INT_MIN, cSum = 0;
            
                for (int j=0; j<m; j++) {
            
                    // getting cumulative sum from [0 to i]
                    cSum += subSum[j];
            
                    ans += mp[cSum-target];
            
                    // insert cumulative value in hash
                    mp[cSum]++;
                }
            }
        }

        return ans;
    }
};