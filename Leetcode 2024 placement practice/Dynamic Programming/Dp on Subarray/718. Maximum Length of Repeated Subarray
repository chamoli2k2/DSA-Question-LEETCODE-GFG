class Solution {
private:
    int solve(vector<int> &nums1, vector<int> &nums2, int i, int j, int &ans){
        // Base case
        int n = nums1.size(), m = nums2.size();
        if(i == n || j == m) return 0;

        if(dp[i][j] != -1) return dp[i][j];

        int curr = 0;
        if(nums1[i] == nums2[j]){
            curr = 1 + solve(nums1, nums2, i+1, j+1, ans);
        }
        
        solve(nums1, nums2, i+1, j, ans);
        solve(nums1, nums2, i, j+1, ans);

        ans = max(ans, curr);

        return dp[i][j] = curr;
    }
public:
    int dp[1001][1001];
    int findLength(vector<int>& nums1, vector<int>& nums2) {
        memset(dp, -1, sizeof(dp));
        int ans = 0;
        solve(nums1, nums2, 0, 0, ans);
        return ans;
    }
};