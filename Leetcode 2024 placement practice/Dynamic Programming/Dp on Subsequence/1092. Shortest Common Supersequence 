class Solution {
public:
    string shortestCommonSupersequence(string &s1, string &s2) {
        int n = s1.size(), m = s2.size();

        vector<vector<int>> dp(n+1, vector<int> (m+1, 0));

        for(int i=1; i<=n; i++){
            for(int j=1; j<=m; j++){
                if(s1[i-1] == s2[j-1]){
                    dp[i][j] = 1 + dp[i-1][j-1];
                }
                else{
                    dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
                }
            }
        }

        string lcs = "";
        int i = n, j = m;
        while(i > 0 && j > 0){
            if(s1[i-1] == s2[j-1]){
                lcs += s1[i-1];
                i--, j--;
            }
            else{
                if(dp[i-1][j] > dp[i][j-1]){
                    i--;
                }
                else{
                    j--;
                }
            }
        }

        i = 0, j = 0;
        int sz = lcs.size(), k = 0;
        string ans = "";
        reverse(lcs.begin(), lcs.end());

        while(k < sz){
            if(lcs[k] == s1[i] && lcs[k] == s2[j]){
                ans += s1[i];
                k++, i++, j++;
            }
            else if(lcs[k] == s1[i]){
                ans += s2[j];
                j++;
            }
            else if(lcs[k] == s2[j]){
                ans += s1[i];
                i++;
            }
            else{
                ans += s1[i];
                ans += s2[j];
                i++, j++;
            }
        }

        while(i < n) ans += s1[i++];
        while(j < m) ans += s2[j++];

        return ans;
    }
};