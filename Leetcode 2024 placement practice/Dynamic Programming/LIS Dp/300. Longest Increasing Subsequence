class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size(), maxLen = 1, ans = 0;
        vector<int> dp(n, 1);

        for(int i=0; i<n; i++){
            for(int j=0; j<i; j++){
                if(nums[j] < nums[i] && dp[i] < 1 + dp[j]){
                    dp[i] = 1 + dp[j];
                    
                }
            }
            maxLen = max(maxLen, dp[i]);
        }

        return maxLen;
    }
};

class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
        int n = nums.size();
        vector<int> ans;

        for(int i=0; i<n; i++){
            int idx = lower_bound(ans.begin(), ans.end(), nums[i]) - ans.begin();

            if(idx == ans.size()){
                ans.push_back(nums[i]);
            }
            else{
                ans[idx] = nums[i];
            }
        }

        return ans.size();
    }
};