class Solution {
private:
    int solve(vector<vector<int>> &nums, int i, int j){
        // Base case
        int n = nums.size(), m = nums[0].size();
        if(i == n || j == m || nums[i][j] == 1) return 0;
        if(i == n-1 && j == m-1) return 1;

        if(dp[i][j] != -1) return dp[i][j];

        int c1 = solve(nums, i+1, j);
        int c2 = solve(nums, i, j+1);

        return dp[i][j] = c1 + c2;
    }
public:
    int dp[101][101];
    int uniquePathsWithObstacles(vector<vector<int>>& nums) {
        memset(dp, -1, sizeof(dp));
        return solve(nums, 0, 0);
    }
};