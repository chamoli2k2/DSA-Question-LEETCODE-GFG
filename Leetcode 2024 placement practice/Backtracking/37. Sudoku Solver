class Solution {
private:
    bool isSafe(vector<vector<char>> &board, int i, int j, char ch){
        int row = 3 * (i / 3), col = 3 * (j / 3);
        for(int k=0; k<9; k++){
            // Checking if row has same char
            if(board[k][j] == ch) return false;
            if(board[i][k] == ch) return false;

            if(board[row+k/3][col+k%3] == ch) return false;
        }

        return true;
    }
    bool solve(vector<vector<char>> &board){

        for(int i=0; i<9; i++){
            for(int j=0; j<9; j++){
                if(board[i][j] == '.'){
                    for(char ch='1'; ch<='9'; ch++){
                        if(isSafe(board, i, j, ch)){
                            board[i][j] = ch;

                            if(solve(board)){
                                return true;
                            }

                            board[i][j] = '.';
                        }
                    }

                    return false;
                }
            }
        }

        return true;
    }

public:
    void solveSudoku(vector<vector<char>>& board) {
        solve(board);
    }
};