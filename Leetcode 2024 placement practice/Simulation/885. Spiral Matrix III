class Solution {
public:
    vector<vector<int>> spiralMatrixIII(int n, int m, int rStart, int cStart) {
        vector<vector<int>> ans;
        ans.push_back({rStart, cStart});
        int idx = 0, steps = 0;
        vector<vector<int>> directions = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};

        while(ans.size() < n*m){
            if(idx == 0 || idx == 2) steps++;

            for(int i=0; i<steps; i++){
                rStart += directions[idx][0];
                cStart += directions[idx][1];

                if(rStart < n && rStart >= 0 && cStart < m && cStart >= 0){
                    ans.push_back({rStart, cStart});
                }
                
            }

            idx = (idx+1) % 4;
        }


        return ans;
    }
};