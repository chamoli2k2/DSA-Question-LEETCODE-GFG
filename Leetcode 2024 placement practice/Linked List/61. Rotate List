class Solution {
private:
    int findLen(ListNode *head){
        // Base case
        if(head == NULL) return 0;
        return 1 + findLen(head->next);
    }

    ListNode* findEnd(ListNode *head){
        while(head->next) head = head->next;
        return head;
    }
public:
    ListNode* rotateRight(ListNode* head, int k) {
        int len = findLen(head);
        if(head == NULL || head->next == NULL || k%len == 0) return head;

        k = k%len;
        ListNode *curr = head, *end;
        int idx = 0;
        while(idx < (len-k-1)){
            curr = curr->next;
            idx++;
        }

        ListNode *newHead = curr->next;
        end = findEnd(head);
        curr->next = NULL;
        end->next = head;


        return newHead;
    }
};