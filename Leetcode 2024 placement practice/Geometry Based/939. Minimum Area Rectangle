// Think about diagonal in case of rectangles
class Solution {
public:
    int minAreaRect(vector<vector<int>>& points) {
        int n = points.size(), ans = INT_MAX;
        unordered_map<int, set<int>> mp;
        
        for(int i=0; i<n; i++){
            int x = points[i][0], y = points[i][1];
            mp[x].insert(y);
        }

        for(int i=0; i<n; i++){
            for(int j=i+1; j<n; j++){
                int x1 = points[i][0], y1 = points[i][1];
                int x2 = points[j][0], y2 = points[j][1];

                if(x1 != x2 && y1 != y2){
                    if(mp[x1].find(y2) != mp[x1].end() && mp[x2].find(y1) != mp[x2].end()){
                        int tempAns = abs(x2-x1) * abs(y2-y1);
                        ans = min(ans, tempAns);
                    }
                }
            }
        }


        return ans == INT_MAX ? 0 : ans;
    }
};