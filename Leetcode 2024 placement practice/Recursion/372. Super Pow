class Solution {
private:
    int power(int a, int b){
        // Base case
        if(b == 0) return 1;

        int halfAnswer = power(a, b/2);

        if(b&1){
            return (halfAnswer%mod *1LL* halfAnswer%mod *1LL* a%mod) % mod;
        }

        return (halfAnswer%mod *1LL* halfAnswer%mod) % mod;
    }

    int solve(int a, vector<int> &b, int idx){
        // Base case
        if(idx < 0) return 1;

        int currPow = power(a, b[idx]);
        int uppCommingPower = power(solve(a, b, idx-1), 10);

        return (currPow % mod *1LL* uppCommingPower % mod) % mod;
    }
public:
    int mod = 1337;
    int superPow(int a, vector<int>& b) {
        int n = b.size();
        if(a == 1) return 1;
        return solve(a, b, n-1);
    }
};