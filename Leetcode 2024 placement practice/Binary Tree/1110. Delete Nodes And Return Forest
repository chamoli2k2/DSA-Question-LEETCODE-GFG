/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    TreeNode* solve(TreeNode *root){
        // Base case
        if(root == NULL) return NULL;

        root->left = solve(root->left);
        root->right = solve(root->right);

        if(mp.count(root->val)){
            if(root->left) ans.push_back(root->left);
            if(root->right) ans.push_back(root->right);

            return NULL;
        }

        return root;
    }
public:
    unordered_map<int,int> mp;
    vector<TreeNode*> ans;
    vector<TreeNode*> delNodes(TreeNode* root, vector<int>& to_delete) {
        for(auto &it : to_delete) mp[it]++;
        
        solve(root);
        if(mp.count(root->val) == 0) ans.push_back(root);
        return ans;
    }
};