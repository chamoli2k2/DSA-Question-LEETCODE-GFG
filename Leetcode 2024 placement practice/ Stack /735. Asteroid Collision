class Solution {
public:
    vector<int> asteroidCollision(vector<int>& nums) {
        int n = nums.size();
        vector<int> ans;
        stack<int> st;

        for(int i=0; i<n; i++){
            int flag = true;
            while(!st.empty()){
                if((st.top() > 0 && nums[i] < 0) && abs(st.top()) < abs(nums[i])){
                    st.pop();
                }
                else if((st.top() > 0 && nums[i] < 0) && abs(st.top()) > abs(nums[i])){
                    flag = false;
                    break;
                }
                else if((st.top() > 0 && nums[i] < 0) && abs(st.top()) == abs(nums[i])){
                    st.pop();
                    flag = false;
                    break;
                }
                else{
                    break;
                }
            }

            if(flag) st.push(nums[i]);
        }

        while(!st.empty()){
            ans.push_back(st.top());
            st.pop();
        }

        reverse(ans.begin(), ans.end());

        return ans;
    }
};