class Solution {
public:
    int findTheCity(int n, vector<vector<int>>& edges, int distanceThreshold) {
        // We can aaply floyd-warshall algorithm here
        vector<vector<int>> dist(n, vector<int>(n, 1e8));
        for(auto &it : edges){
            dist[it[0]][it[1]] = it[2];
            dist[it[1]][it[0]] = it[2];
        }
        for(int i=0; i<n; i++) dist[i][i] = 0;

        for(int via=0; via<n; via++){
            for(int i=0; i<n; i++){
                for(int j=0; j<n; j++){
                    dist[i][j] = min(dist[i][j], dist[i][via] + dist[via][j]);
                }
            }
        }

        int ans = -1, maxCount = INT_MAX;
        for(int city=0; city<n; city++){
            int count = 0;
            for(int j=0; j<n; j++){
                if(dist[city][j] <= distanceThreshold){
                    count++;
                }
            }

            if(count <= maxCount){
                maxCount = count;
                ans = city;
            }
        }

        return ans;
    }
};