class Solution {
public:
    int regionsBySlashes(vector<string>& grid) {
        int n = grid.size(), ans = 0;
        vector<vector<int>> nums(3*n, vector<int>(3*n, 0));

        for(int i=0; i<n; i++){
            for(int j=0; j<n; j++){
                if(grid[i][j] == '/'){
                    nums[3*i][3*j+2] = 1;
                    nums[3*i+1][3*j+1] = 1;
                    nums[3*i+2][3*j] = 1;
                }
                else if(grid[i][j] == '\\'){
                    nums[3*i][3*j] = 1;
                    nums[3*i+1][3*j+1] = 1;
                    nums[3*i+2][3*j+2] = 1;
                }
            }
        }

        vector<vector<int>> visited(3*n, vector<int>(3*n, 0));

        function<void(int, int)> solve = [&](int i, int j){
            // Base case
            if(i < 0 || j < 0 || i == 3*n || j == 3*n || visited[i][j] == 1 || nums[i][j] == 1) return;

            visited[i][j] = 1;
            solve(i+1, j);
            solve(i-1, j);
            solve(i, j+1);
            solve(i, j-1);
        };

        for(int i=0; i<3*n; i++){
            for(int j=0; j<3*n; j++){
                if(nums[i][j] == 0 && visited[i][j] == 0){
                    solve(i, j);
                    ans++;
                }
            }
        }

        return ans;
    }
};