class Solution {
public:
    int minimumOperationsToMakeKPeriodic(string word, int k) {
        int n = word.size(), maxFreq = 0, idx = 0;
        unordered_map<string,int> mp;

        string tempWord(k, '0');
        for(int i=0; i<k; i++){
            tempWord[idx++] = word[i];
        }

        mp[tempWord]++;
        maxFreq = 1;
        for(int i=k; i<n; i++){
            if(i%k == 0) idx = 0;

            tempWord[idx++] = word[i];

            if(i%k == k-1) mp[tempWord]++;
            maxFreq = max(maxFreq, mp[tempWord]);
        }

        int totalWord = n / k;

        return totalWord - maxFreq;
    }
};