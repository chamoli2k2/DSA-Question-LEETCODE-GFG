class Solution {
private:
    bool check(vector<int> &nums, int days, int m, int k){
        int n = nums.size(), booket = 0, count = 0;
        for(int i=0; i<n; i++){
            if(nums[i] <= days){
                count++;
                if(count == k){
                    booket++;
                    count = 0;
                }
            }
            else{
                count = 0;
            }
        }

        return booket >= m;
    }
public:
    int minDays(vector<int>& bloomDay, int m, int k) {
        int n = bloomDay.size();
        if(m > n) return -1;

        int s = 0, e = *max_element(begin(bloomDay), end(bloomDay)) + 4000, mid, ans = -1;

        while(s <= e){
            mid = s + (e - s) / 2;

            if(check(bloomDay, mid, m, k)){
                ans = mid;
                e = mid - 1;
            }
            else{
                s = mid + 1;
            }
        }

        return ans;
    }
};