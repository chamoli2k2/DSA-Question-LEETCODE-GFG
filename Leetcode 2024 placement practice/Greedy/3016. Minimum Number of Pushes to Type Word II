class Solution {
public:
    int minimumPushes(string word) {
        int n = word.size(), ans = 0;
        unordered_map<char,int> mp;
        for(int i=0; i<n; i++) mp[word[i]]++;
        priority_queue<int> pq;
        for(auto &it : mp){
            pq.push({it.second});
        }
        
        int counter = 1, time = 0;
        while(!pq.empty()){
            if(time == 8){
                time = 0;
                counter++;
            }

            ans += counter*pq.top();
            pq.pop();
            time++;
        }

        return ans;
    }
};