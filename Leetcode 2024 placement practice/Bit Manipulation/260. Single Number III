class Solution {
public:
    vector<int> singleNumber(vector<int>& nums) {
        int XOR = 0, n = nums.size();
        for(auto &it : nums) XOR = XOR ^ it;

        // Finding first set bit
        int setBitIdx = 0;

        while(XOR){
            if(XOR&1){
                break;
            }
            setBitIdx++;
            XOR = XOR >> 1;
        }

        int Elem1 = 0, Elem2 = 0;
        for(int i=0; i<n; i++){
            if(nums[i]&(1<<setBitIdx)){
                Elem1 = Elem1 ^ nums[i];
            }
            else{
                Elem2 = Elem2 ^ nums[i];
            }
        }

        return {Elem1, Elem2};
    }
};