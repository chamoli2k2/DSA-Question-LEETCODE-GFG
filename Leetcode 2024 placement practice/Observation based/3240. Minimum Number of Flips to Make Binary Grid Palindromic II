class Solution {
public:
    int minFlips(vector<vector<int>>& grid) {
        int n = grid.size(), m = grid[0].size(), ans = 0;

        for(int i=0; i<n/2; i++){
            for(int j=0; j<m/2; j++){
                int x = 0;
                x += grid[i][j];
                x += grid[i][m-j-1];
                x += grid[n-i-1][j];
                x += grid[n-i-1][m-j-1];

                ans += min(x, 4-x);
            }
        }

        int singleFlip = 0, onePair = 0;
        if(n%2 == 1){
            for(int i=0; i<m/2; i++){
                if(grid[n/2][i] != grid[n/2][m-i-1]){
                    ans++;
                    singleFlip++;
                }

                if(grid[n/2][i] == grid[n/2][m-i-1] && grid[n/2][i] == 1){
                    onePair++;
                }
            }
        }

        if(m%2 == 1){
            for(int i=0; i<n/2; i++){
                if(grid[i][m/2] != grid[n-i-1][m/2]){
                    ans++;
                    singleFlip++;
                }

                if(grid[i][m/2] == grid[n-i-1][m/2] && grid[i][m/2] == 1){
                    onePair++;
                }
            }
        }

        // Checking if onePair is odd or not
        if((onePair%2 == 1) && (singleFlip == 0)){
            ans += 2;
        }

        if((n%2 == 1) && (m%2 == 1) && grid[n/2][m/2] == 1) ans++;

        return ans;
    }
};