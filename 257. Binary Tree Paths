/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
private:
    void solve(TreeNode* root,vector<string> &ans,string st){
        // Base case
        if(root == NULL){
            return;
        }

        if(root->left == NULL && root->right == NULL){
            st += to_string(root->val);
            ans.push_back(st);
        }

        st += to_string(root->val) + "->";
        solve(root->left,ans,st);
        solve(root->right,ans,st);
        st.pop_back();
    }
public:
    vector<string> binaryTreePaths(TreeNode* root) {
        vector<string> ans;
        solve(root,ans,"");
        return ans;
    }
};
