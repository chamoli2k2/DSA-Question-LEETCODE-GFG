class Solution {
private:
    void solve(unordered_map<string,int> &mp,string ans,int idx,int n){
        if(idx == n){
            if(mp[ans] == 0){
                res = ans;
            }
            return;
        }

        if(res.size() > 0) return ;
        
        // changing
        ans[idx] = '1';
        solve(mp,ans,idx+1,n);
        ans[idx] = '0';

        // not changing
        solve(mp,ans,idx+1,n);
    }
public:
    string res = "";
    string findDifferentBinaryString(vector<string>& nums) {
        int m = nums.size();
        int n = nums[0].size();
        unordered_map<string,int> mp;

        for(auto it : nums) mp[it] = 1;

        string ans = "";
        for(int i=0;i<n;i++){
            ans += '0';
        }

        solve(mp,ans,0,n);
        return res;
    }
};
